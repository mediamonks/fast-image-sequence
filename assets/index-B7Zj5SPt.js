var I=Object.defineProperty;var w=(n,e,t)=>e in n?I(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var o=(n,e,t)=>(w(n,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(a){if(a.ep)return;a.ep=!0;const s=t(a);fetch(a.href,s)}})();const v=`let buffer;

self.onmessage = async (e) => {
    if (e.data.cmd === 'init') {
        buffer = e.data.buffer;
    } else if (e.data.cmd === 'load') {
        loadImage(e.data.offset, e.data.size, e.data.index);
    }
};

async function loadImage(offset, size, index) {
    const view = new Uint8Array(buffer, offset, size);
    const blob = new Blob([view], {});
    const imageBitmap = await createImageBitmap(blob);
    postMessage({msg: 'done', imageBitmap, index}, [imageBitmap]);
}`;class b{constructor(e,t={}){o(this,"fileInfo",[]);o(this,"buffer");o(this,"options");o(this,"worker");o(this,"resolve",[]);o(this,"defaultOptions",{useWorker:!0});this.buffer=e,this.options={...this.defaultOptions,...t};let i=0;for(;i<this.buffer.byteLength-512;){const a=this.readFileName(i);if(a.length==0)break;const s=this.readFileSize(i);this.fileInfo.push({name:a,size:s,header_offset:i}),i+=512+512*Math.trunc(s/512),s%512&&(i+=512)}}getInfo(e){return this.fileInfo.find(t=>t.name==e)}getImage(e,t){return this.options.useWorker?(this.worker||(this.worker=this.createWorker()),new Promise((i,a)=>{const s=this.getInfo(e);s&&!this.resolve[t]?(this.resolve[t]=i,this.worker.postMessage({cmd:"load",offset:s.header_offset+512,size:s.size,index:t})):a()})):new Promise((i,a)=>{const s=this.getBlob(e,"image");s!==void 0?createImageBitmap(s).then(r=>{i(r)}).catch(()=>{a()}):a()})}readFileName(e){const t=new Uint8Array(this.buffer,e,100),i=t.indexOf(0);return new TextDecoder().decode(t.slice(0,i))}readFileSize(e){const t=new Uint8Array(this.buffer,e+124,12);let i="";for(let a=0;a<11;a++)i+=String.fromCharCode(t[a]);return parseInt(i,8)}getBlob(e,t=""){const i=this.getInfo(e);if(i){const a=new Uint8Array(this.buffer,i.header_offset+512,i.size);return new Blob([a],{type:t})}}createWorker(){const e=new Blob([v],{type:"application/javascript"}),t=new Worker(URL.createObjectURL(e));return t.addEventListener("message",i=>{const a=this.resolve[i.data.index];this.resolve[i.data.index]=void 0,a?a(i.data.imageBitmap):i.data.imageBitmap.close()}),t.postMessage({cmd:"init",buffer:this.buffer},[this.buffer]),t}}const y=`self.onmessage = async (e) => {
    if (e.data.cmd === 'load') {
        await loadImage(e.data.url, e.data.index);
    }
};

async function loadImage(url, index) {
    const response = await fetch(url);
    if (!response.ok) throw "network error";
    const imageBitmap = await createImageBitmap(await response.blob());
    postMessage({msg: 'done', imageBitmap, index}, [imageBitmap]);
}`;class L{constructor(){o(this,"index",-1e10);o(this,"worker");o(this,"resolve");const e=new Blob([y],{type:"application/javascript"}),t=new Worker(URL.createObjectURL(e));t.addEventListener("message",i=>{this.resolve&&i.data.index===this.index?this.resolve(i.data.imageBitmap):i.data.imageBitmap.close()}),this.worker=t}load(e,t){return this.index=e,new Promise((i,a)=>{this.resolve=i,this.worker.postMessage({cmd:"load",url:t,index:e})})}abort(){this.index=-1e10,this.resolve=void 0}}const g=[];function x(){return g.length===0&&g.push(new L),g.shift()}function C(n){n.abort(),g.push(n)}class k{constructor(e,t){o(this,"index");o(this,"priority",0);o(this,"tarImageAvailable",!1);o(this,"loading",!1);o(this,"loadingTarImage",!1);o(this,"context");o(this,"_image");o(this,"_tarImage");this.index=t,this.context=e}get tarImage(){if(this._tarImage!==void 0&&!this.loadingTarImage)return this._tarImage}set tarImage(e){this.releaseTarImage(),this._tarImage=e}get image(){if(this._image!==void 0&&!this.loading)return this._image}set image(e){this.releaseImage(),this._image=e}get tarImageURL(){if(this.context.options.tarImageURLCallback)return this.context.options.tarImageURLCallback(this.index)}get imageURL(){if(this.context.options.imageURLCallback)return new URL(this.context.options.imageURLCallback(this.index),window.location.href).href}reset(){this._image=void 0,this._tarImage=void 0,this.priority=0}async getImage(){return new Promise(async(e,t)=>{this.image!==void 0?e(this.image):this.tarImage!==void 0?e(this.tarImage):this.fetchTarImage().then(i=>e(i)).catch(()=>t())})}async fetchImage(){return new Promise((e,t)=>{if(this.imageURL){this.loading=!0;const i=s=>{this.loading&&(this.image=s,e(s))},a=s=>{this.reset(),t(s)};if(this.context.options.useWorkerForImage){const s=x();s.load(this.index,this.imageURL).then(r=>{i(r),C(s)}).catch(r=>a(r))}else{const s=new Image;this.loadImage(s,this.imageURL).then(()=>{i(s)}).catch(r=>a(r))}}else t()})}async fetchTarImage(){return new Promise((e,t)=>{this.tarImage!==void 0?e(this.tarImage):this.tarImageAvailable&&!this.loadingTarImage?(this.loadingTarImage=!0,this.context.tarball.getImage(this.tarImageURL,this.index).then(i=>{this.loadingTarImage&&(this.tarImage=i,e(i))}).catch(i=>{this.loadingTarImage=!1,this.reset(),t(i)})):(this.reset(),t())})}releaseImage(){this._image&&(this._image instanceof ImageBitmap&&this._image.close(),this._image=void 0),this.loading=!1}releaseTarImage(){this.tarImage&&(this.tarImage instanceof ImageBitmap&&this.tarImage.close(),this._tarImage=void 0),this.loadingTarImage=!1}loadImage(e,t){return new Promise((i,a)=>{e.onerror=s=>a(s),e.decoding="async",e.src=t,e.decode().then(()=>{i(e)}).catch(s=>{console.error(s),a(s),this.reset()})})}}function T(){const n=document.createElement("div");return n.style.position="absolute",n.style.top="0",n.style.left="0",n.style.backgroundColor="rgba(0, 0, 0, 0.5)",n.style.color="white",n.style.padding="8px",n.style.fontSize="12px",n.style.zIndex="1000",n.style.lineHeight="20px",n}function R(n,e){n.innerHTML=`<pre>${e}</pre>`}function F(){return typeof navigator<"u"&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}const f=class f{constructor(e,t){o(this,"canvas");o(this,"options");o(this,"width",0);o(this,"height",0);o(this,"frame",0);o(this,"tarball");o(this,"context");o(this,"tickFuncs",[]);o(this,"frames",[]);o(this,"startTime",-1);o(this,"animationRequestId",0);o(this,"container");o(this,"resizeObserver");o(this,"mutationOberver");o(this,"clearCanvas",!0);o(this,"speed",0);o(this,"prevFrame",0);o(this,"direction",1);o(this,"lastFrameDrawn",-1);o(this,"destructed",!1);o(this,"logElement");o(this,"initialized",!1);if(this.options={...f.defaultOptions,...t},this.options.frames<=0)throw new Error("FastImageSequence: frames must be greater than 0");this.options.numberOfCachedImages=Math.floor(this.options.numberOfCachedImages/2)*2+1,this.options.numberOfCachedImages=Math.max(1,Math.min(this.options.numberOfCachedImages,this.options.frames)),this.container=e,this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.context.fillStyle=this.options.fillStyle,this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.canvas.style.width="100%",this.canvas.style.height="100%",this.container.appendChild(this.canvas),this.resizeObserver=new ResizeObserver(()=>{this.clearCanvas=!0}),this.resizeObserver.observe(this.canvas),this.mutationOberver=new MutationObserver(()=>{this.container.isConnected||(console.error("FastImageSequence: container is not connected to the DOM, fast image sequence will be destroyed"),this.destruct())}),this.mutationOberver.observe(e,{childList:!0});for(let i=0;i<this.options.frames;i++)this.frames.push(new k(this,i));this.loadResources().then(()=>{this.initialized=!0,this.options.showDebugInfo&&(this.logElement=T(),this.container.appendChild(this.logElement),this.tick(()=>this.logDebugStatus(this.logElement))),this.drawingLoop(-1)})}get isPlaying(){return this.speed!==0}get isPaused(){return!this.isPlaying}get progress(){return this.index/(this.options.frames-1)}set progress(e){this.frame=(this.options.frames-1)*e}get ready(){return new Promise(e=>{const t=()=>{this.lastFrameDrawn!==-1?e():setTimeout(t,16)};t()})}get index(){return this.wrapIndex(this.frame)}get spread(){return this.options.wrap?Math.floor(this.options.numberOfCachedImages/2+1):this.options.numberOfCachedImages}tick(e){this.tickFuncs.push(e)}play(e=30){this.speed=e}stop(){this.speed=0}getFrameImage(e){return this.frames[this.wrapIndex(e)].getImage()}destruct(){this.destructed||(this.destructed=!0,this.animationRequestId&&cancelAnimationFrame(this.animationRequestId),this.resizeObserver.disconnect(),this.mutationOberver.disconnect(),this.container.removeChild(this.canvas),this.logElement&&(this.container.removeChild(this.logElement),this.logElement=void 0),this.canvas.replaceWith(this.canvas.cloneNode(!0)),this.frames.forEach(e=>{e.releaseImage(),e.releaseTarImage()}))}async loadResources(){if(this.options.tarURL!==void 0){const i=await(await(await fetch(this.options.tarURL)).blob()).arrayBuffer();this.tarball=new b(i,{useWorker:this.options.useWorkerForTar}),this.frames.forEach(a=>{var s;return a.tarImageAvailable=a.tarImageURL!==void 0&&((s=this.tarball)==null?void 0:s.getInfo(a.tarImageURL))!==void 0}),this.options.preloadAllTarImages&&await Promise.all(this.frames.map(a=>a.fetchTarImage()))}}wrapIndex(e){const t=e|0;return this.wrapFrame(t)}wrapFrame(e){return this.options.wrap?(e%this.options.frames+this.options.frames)%this.options.frames:Math.max(Math.min(e,this.options.frames-1),0)}async drawingLoop(e=0){if(this.destructed)return;e/=1e3;const t=this.initialized?this.startTime<0?1/60:Math.min(e-this.startTime,1/30):0;this.startTime=e>0?e:-1,this.frame-this.prevFrame<0&&(this.direction=-1),this.frame-this.prevFrame>0&&(this.direction=1),this.frame+=this.speed*t,this.frame=this.wrapFrame(this.frame);const i=this.index,a=this.canvas.getBoundingClientRect();if(a.top<window.innerHeight&&a.bottom>0){this.frames.forEach(l=>{l.priority=Math.abs(l.index-i);let m=Math.sign(this.frame-this.prevFrame);if(this.options.wrap){const u=this.options.frames-l.priority;u<l.priority&&(l.priority=u)}l.priority+=this.direction*m===-1?this.frames.length:0}),this.frames.sort((l,m)=>m.priority-l.priority);const r=this.frames.filter(l=>l.image!==void 0).pop();r&&r.image&&this.drawFrame(r);const h=this.frames.filter(l=>l.tarImage!==void 0).pop();h&&h.tarImage&&(r&&r.image&&r.priority<=h.priority||this.drawFrame(h))}this.process(t),this.tickFuncs.forEach(r=>r(t)),this.prevFrame=this.frame,this.animationRequestId=requestAnimationFrame(r=>this.drawingLoop(r))}drawFrame(e){const t=e.image||e.tarImage;if(!t)return;this.lastFrameDrawn=e.index;const i=this.container.offsetWidth/this.container.offsetHeight,a=t.width/t.height;if(this.width=Math.max(this.width,t.width),this.height=Math.max(this.height,t.height),this.options.size==="contain"){const h=i>a?this.height*i:this.width,l=i>a?this.height:this.width/i;(this.canvas.width!==h||this.canvas.height!==this.height)&&(this.canvas.width=h,this.canvas.height=l)}else{const h=i>a?this.width:this.height*i,l=i>a?this.width/i:this.height;(this.canvas.width!==h||this.canvas.height!==this.height)&&(this.canvas.width=h,this.canvas.height=l)}const s=(this.canvas.width-this.width)/2,r=(this.canvas.height-this.height)/2;(this.clearCanvas||this.options.clearCanvas)&&(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.clearCanvas=!1),this.context.drawImage(t,0,0,t.width,t.height,s,r,this.width,this.height)}process(e){const t=this.index;if(this.frames.forEach(i=>{i.priority=Math.abs(i.index-t),this.options.wrap&&(i.priority=Math.min(i.priority,this.options.frames-i.priority))}),!this.options.preloadAllTarImages&&this.options.tarURL!==void 0&&this.tarball){let i=this.getTarStatus().numLoading;const a=this.options.maxConnectionLimit,s=this.frames.filter(r=>r.tarImage===void 0&&r.tarImageAvailable&&!r.loadingTarImage&&r.priority<this.spread).sort((r,h)=>r.priority-h.priority);for(;i<a&&s.length>0;)s.shift().fetchTarImage().then(()=>{this.releaseTarImageWithLowestPriority()}).catch(h=>{console.error(h)}),i++}if(this.options.imageURLCallback){let i=this.getLoadStatus().numLoading;const a=this.options.maxConnectionLimit,s=this.frames.filter(r=>r.image===void 0&&!r.loading&&r.priority<this.spread).sort((r,h)=>r.priority-h.priority);for(;i<a&&s.length>0;)s.shift().fetchImage().then(()=>{this.releaseImageWithLowestPriority()}).catch(h=>{console.error(h)}),i++}}getLoadStatus(){const e=this.options.imageURLCallback!==void 0,t=this.frames.filter(r=>r.loading).length,i=this.frames.filter(r=>r.image!==void 0).length,a=this.options.numberOfCachedImages,s=(a-t)/a;return{used:e,progress:s,numLoading:t,numLoaded:i,maxLoaded:a}}getTarStatus(){const e=this.options.tarURL!==void 0,t=this.tarball!==void 0&&this.initialized,i=this.frames.filter(h=>h.loadingTarImage).length,a=this.frames.filter(h=>h.tarImage!==void 0).length,s=this.options.preloadAllTarImages?this.frames.length:this.options.numberOfCachedImages,r=a/s;return{used:e,tarLoaded:t,progress:r,numLoading:i,numLoaded:a,maxLoaded:s}}logDebugStatus(e){let t=`${this.options.name} - frames: ${this.frames.length}, maxCache: ${this.options.numberOfCachedImages}, wrap: ${this.options.wrap}, size: ${this.options.size}
- last frame drawn ${this.lastFrameDrawn}/${this.index}
`;const i=a=>`${Math.abs(a*100).toFixed(1).padStart(5," ")}%`;{const{used:a,progress:s,numLoading:r,numLoaded:h,maxLoaded:l}=this.getLoadStatus();t+=`- images: ${a?`${i(s)}, numLoading: ${r}, numLoaded: ${h}/${l}`:"not used"} 
`}{const{used:a,tarLoaded:s,progress:r,numLoading:h,numLoaded:l,maxLoaded:m}=this.getTarStatus();t+=`- tar:    ${a?`${i(r)}, numLoading: ${h}, numLoaded: ${l}/${m}`:"not used"}`}R(e,t)}releaseImageWithLowestPriority(){const e=this.frames.filter(t=>t.image!==void 0&&!t.loading);if(e.length>this.options.numberOfCachedImages){const t=e.sort((i,a)=>i.priority-a.priority).pop();t&&t.releaseImage()}}releaseTarImageWithLowestPriority(){if(!this.options.preloadAllTarImages){const e=this.frames.filter(t=>t.tarImage!==void 0&&!t.loadingTarImage);if(e.length>this.options.numberOfCachedImages){const t=e.sort((i,a)=>i.priority-a.priority).pop();t&&t.releaseTarImage()}}}};o(f,"defaultOptions",{frames:1,imageURLCallback:void 0,tarURL:void 0,tarImageURLCallback:void 0,wrap:!1,fillStyle:"#00000000",size:"cover",preloadAllTarImages:!1,clearCanvas:!1,useWorkerForTar:!0,useWorkerForImage:!F(),numberOfCachedImages:33,showDebugInfo:!1,name:"FastImageSequence",maxConnectionLimit:4});let c=f;const S=document.getElementById("prev-button"),O=document.getElementById("next-button"),d=document.getElementById("slider-input");async function U(n){const e=new c(n,{name:"PlayWithControlTest",frames:89,imageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.webp`,tarURL:"lowrespreviews.tar",tarImageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.jpg`,wrap:!0,size:"contain",fillStyle:"#00000000",preloadAllTarImages:!1,useWorkerForTar:!0,numberOfCachedImages:32,clearCanvas:!1,showDebugInfo:!0});await e.ready,e.progress=0,e.tick(t=>{e.isPlaying&&(d.value=e.progress)}),S.addEventListener("click",()=>{e.play(-30)}),O.addEventListener("click",()=>{e.play(30)}),d.addEventListener("mousedown",t=>{e.stop()}),d.addEventListener("input",()=>{e.isPaused&&(e.progress=d.value)}),e.play(30)}async function B(n){const e=new c(n,{name:"PlayBackwardsTest at 200fps",frames:89,imageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.webp`,wrap:!0,size:"cover",fillStyle:"#00000000",preloadAllTarImages:!1,useWorkerForTar:!0,numberOfCachedImages:32,clearCanvas:!1,showDebugInfo:!0});await e.ready,e.progress=0,e.play(-200)}async function E(n){await new c(n,{name:"StillImageTest",frames:89,imageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.webp`,tarURL:"lowrespreviews.tar",tarImageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.jpg`,wrap:!0,size:"cover",fillStyle:"#00000000",preloadAllTarImages:!1,useWorkerForTar:!0,numberOfCachedImages:32,clearCanvas:!1,showDebugInfo:!0}).ready,console.log("fastImageSequence loaded")}function M(n){let e=p(n);setInterval(()=>{console.log("destructing"),e.destruct(),console.log("constructing"),e=p(n)},3e3)}function p(n){const e=new c(n,{name:"ConstructDestructTest",frames:89,imageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.webp`,tarURL:Math.random()>.5?"lowrespreviews.tar":void 0,tarImageURLCallback:t=>`${(""+(t+1)).padStart(4,"0")}.jpg`,wrap:Math.random()>.5,size:Math.random()>.5?"cover":"contain",fillStyle:"#00000000",preloadAllTarImages:Math.random()>.5,useWorkerForTar:Math.random()>.5,numberOfCachedImages:1+Math.random()*32|0,clearCanvas:Math.random()>.5,showDebugInfo:!0});return e.ready.then(()=>{e.tick(()=>e.progress=Math.random())}),e}U(document.getElementsByClassName("grid-item")[0]);B(document.getElementsByClassName("grid-item")[1]);E(document.getElementsByClassName("grid-item")[2]);M(document.getElementsByClassName("grid-item")[3]);
